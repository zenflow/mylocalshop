- args:
    cascade: false
    read_only: false
    sql: CREATE EXTENSION IF NOT EXISTS pgcrypto;
  type: run_sql
- args:
    cascade: false
    read_only: false
    sql: "CREATE TABLE \"public\".\"sessions\"(\"id\" uuid NOT NULL DEFAULT gen_random_uuid(),
      \"createdAt\" timestamptz NOT NULL DEFAULT now(), \"updatedAt\" timestamptz
      NOT NULL DEFAULT now(), \"provider\" text NOT NULL, \"token\" text NOT NULL,
      \"userId\" uuid NOT NULL, PRIMARY KEY (\"id\") , FOREIGN KEY (\"userId\") REFERENCES
      \"public\".\"users\"(\"id\") ON UPDATE no action ON DELETE cascade);\nCREATE
      OR REPLACE FUNCTION \"public\".\"set_current_timestamp_updatedAt\"()\nRETURNS
      TRIGGER AS $$\nDECLARE\n  _new record;\nBEGIN\n  _new := NEW;\n  _new.\"updatedAt\"
      = NOW();\n  RETURN _new;\nEND;\n$$ LANGUAGE plpgsql;\nCREATE TRIGGER \"set_public_sessions_updatedAt\"\nBEFORE
      UPDATE ON \"public\".\"sessions\"\nFOR EACH ROW\nEXECUTE PROCEDURE \"public\".\"set_current_timestamp_updatedAt\"();\nCOMMENT
      ON TRIGGER \"set_public_sessions_updatedAt\" ON \"public\".\"sessions\" \nIS
      'trigger to set value of column \"updatedAt\" to current timestamp on row update';"
  type: run_sql
- args:
    name: sessions
    schema: public
  type: add_existing_table_or_view
