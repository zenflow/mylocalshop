- args:
    cascade: false
    read_only: false
    sql: CREATE EXTENSION IF NOT EXISTS pgcrypto;
  type: run_sql
- args:
    cascade: false
    read_only: false
    sql: "CREATE TABLE \"public\".\"users\"(\"id\" uuid NOT NULL DEFAULT gen_random_uuid(),
      \"createdAt\" timestamptz NOT NULL DEFAULT now(), \"updatedAt\" timestamptz
      NOT NULL DEFAULT now(), \"googleId\" text, \"email\" text NOT NULL, \"firstName\"
      text NOT NULL, \"lastName\" text NOT NULL, \"picture\" text, \"locale\" text
      NOT NULL DEFAULT 'en', PRIMARY KEY (\"id\") , UNIQUE (\"googleId\"), UNIQUE
      (\"email\"));\nCREATE OR REPLACE FUNCTION \"public\".\"set_current_timestamp_updatedAt\"()\nRETURNS
      TRIGGER AS $$\nDECLARE\n  _new record;\nBEGIN\n  _new := NEW;\n  _new.\"updatedAt\"
      = NOW();\n  RETURN _new;\nEND;\n$$ LANGUAGE plpgsql;\nCREATE TRIGGER \"set_public_users_updatedAt\"\nBEFORE
      UPDATE ON \"public\".\"users\"\nFOR EACH ROW\nEXECUTE PROCEDURE \"public\".\"set_current_timestamp_updatedAt\"();\nCOMMENT
      ON TRIGGER \"set_public_users_updatedAt\" ON \"public\".\"users\" \nIS 'trigger
      to set value of column \"updatedAt\" to current timestamp on row update';"
  type: run_sql
- args:
    name: users
    schema: public
  type: add_existing_table_or_view
